@model IEnumerable<BTL_64132201.Models.CartItem>
<div class="container-fluid py-5">
    <div class="container py-5">
        @if
        (!string.IsNullOrWhiteSpace(TempData["CheckOutSuccessMessage"]?.ToString()))
        {
            <div class="w-100 d-flex justify-content-end">
                <div class="alert alert-success alert-dismissible fade show r-0 mr-5" role="alert" id="alert_message" style="width:40%">
                    <strong>Success!</strong>
                    @TempData["CheckOutSuccessMessage"]?.ToString()
                    <button type="button" class="btn-close" data-dismiss="alert"
                            aria-label="Close">
                    </button>
                </div>
            </div>
        }
        @if
        (!string.IsNullOrWhiteSpace(TempData["CheckOutErrorMessage"]?.ToString()))
        {
            <div class="w-100 d-flex justify-content-end">
                <div class="alert alert-danger alert-dismissible fade show r-0 mr-5" role="alert" id="alert_message" style="width:40%">
                    <strong>Success!</strong>
                    @TempData["CheckOutErrorMessage"]?.ToString()
                    <button type="button" class="btn-close" data-dismiss="alert"
                            aria-label="Close">
                    </button>
                </div>
            </div>
        }
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">Ảnh sản phẩm</th>
                        <th scope="col">Tên sản phẩm</th>
                        <th scope="col">Đơn giá</th>
                        <th scope="col">Số lượng</th>
                        <th scope="col">Thành tiền</th>
                        <th scope="col">Xóa</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr id="idProduct-@item.IdProduct">
                            <th scope="row">
                                <div class="d-flex align-items-center">
                                    <img src="~/images/SanPham/@item.Img"
                                         class="img-fluid me-5 rounded-circle" style="width: 80px; height: 80px;"
                                         alt="@item.Img">
                                </div>
                            </th>
                            <td>
                                <p class="mb-0 mt-4">@item.Name</p>
                            </td>
                            <td>
                                <p class="mb-0 mt-4">@item.Price.ToString("#,##0 VND")</p>
                            </td>
                            <td>
                                <div class="input-group quantity mt-4" style="width: 100px;">
                                    <div class="input-group-btn">
                                        <button onclick="clickBtnQuantity(@item.IdProduct,false)" class="btn btn-sm btn-minus rounded-circle bg-light border">
                                            <i class="fa fa-minus"></i>
                                        </button>
                                    </div>
                                    <input type="text"
                                           id="quantityProduct"
                                           product-id-input="@item.IdProduct" class="form-control form-control-sm text-center border-0"
                                           value="@item.Quantity">
                                    <div class="input-group-btn">
                                        <button onclick="clickBtnQuantity(@item.IdProduct,true)" class="btn btn-sm btn-plus rounded-circle bg-light border">
                                            <i class="fa fa-plus"></i>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p id="totalProduct-@item.IdProduct" class="mb-0 mt-4">@item.Total.ToString("#,##0 VND")</p>
                            </td>
                            <td>
                                <button onclick="clickDeleteProduct(@item.IdProduct)" class="btn btn-md rounded-circle bg-light border mt-4">
                                    <i class="fa fa-times text-danger"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="row g-4 justify-content-end">
            <form asp-controller="Cart" asp-action="CheckOut" class="row g-4 justify-content-end">
                <div class="col-12 text-end mb-3">
                    <h4 class="text-secondary">Tổng tiền:</h4>
                    <h2 id="totalCheckout" class="text-primary">
                        @Model.Sum(p => p.Total).ToString("#,##0 VND")
                    </h2>
                </div>
                <div class="col-sm-8 col-md-7 col-lg-6 col-xl-4">
                    <div class="bg-light rounded p-4 shadow">
                        <button class="btn btn-primary w-100 py-3 fw-bold rounded-pill text-uppercase"
                                type="submit">
                            <i class="fa fa-credit-card me-2"></i> Thanh toán ngay
                        </button>
                        <p class="text-center mt-3 text-muted small">
                            * Bằng cách nhấn "Thanh toán", bạn đồng ý với các điều khoản và điều kiện của chúng tôi.
                        </p>
                    </div>
                </div>
            </form>
        </div>

    </div>
    <script>
        // ------------- Auto Close Alert ----------------
        const alert_error = document.getElementById("alert_message")
        window.setTimeout(function () {
        $(".alert").fadeTo(500, 0).slideUp(500, function () {
        $(this).remove();
        });
        }, 2000);

        //------------- Delete Product Start ---------------
        function clickDeleteProduct(idProduct) {
            $.ajax({
                url: '@Url.Action("RemoveCart", "Cart")',
                data: { id: idProduct },
                success: function (data) {
                    console.log("Delete Success ", idProduct);
                    //Không hiển thị hàng hóa đó nữa
                    const idName = "#idProduct-" + idProduct;
                    console.log(idName);
                    $(idName).remove();

                    //Load lại tổng tiền thanh toán
                    $.ajax({
                        url: '@Url.Action("GetTotalAmount", "Cart")',
                        success: function (total) {
                            console.log("Tổng tiền: ");
                            $("#totalCheckout").text(total.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " VND");
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            alert("Error updating total amount.");
                        }
                    });
                    //Load lại Cart ViewComponent
                    $.ajax({
                        url: '@Url.Action("RefreshCartViewComponent", "Cart")',
                        success: function (data) {
                            console.log(data)
                            $("#cart_view_component").html(data);
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            console.log(thrownError)
                            alert("Error updating Cart ViewComponent.");
                        }
                    });
                    //call is successfully completed and we got result in data
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    //some errror, some show err msg to user and log the error
                    alert(xhr.responseText);
                }
            });
        }
        //------------- Delete Product End ---------------
        function clickBtnQuantity(productId , increment){
            // increment = true -> Nhấn button Tăng số lượng
            // increment = false -> Nhấn button Giảm số lượng

            // Lấy product-id từ nút được nhấn
            console.log("productId ", productId);
            // Ví dụ: Hiển thị productId và giá trị increment trong console
            console.log('Product ID:', productId);
            console.log('Increment:', increment);
            // Ajax gọi action ChangeQuantityCart trong Cart Controller
            $.ajax({
                url: '@Url.Action("ChangeQuantityCart", "Cart")',
                data: { id: productId, isIncrement: increment, quantity: 1 },
                success: function (data) {
                    console.log("ChangeQuantityCart Success ", productId, ' Increment: ', increment);
                    //Lấy giá trị trong ô Input theo ProductId
                    const queryString = '[product-id-input="' + productId + '"]';
                    const inputValue = document.querySelectorAll(queryString)[0].value;
                    // Nếu giá trị trong ô Input <= 0 thì remove hàng hóa đó
                    if (inputValue <= 0) {
                        const idName = "#idProduct-" + productId;
                        $(idName).remove();
                    }
                    else
                    {
                        //Load lại tổng tiền theo từng Product
                        $.ajax({
                            url: '@Url.Action("GetTotalProduct", "Cart")',
                            data: { idProduct: productId },
                            success: function (total) {
                                // console.log̣̣̣("update gia tien ",total);
                                $("#totalProduct-" + productId).text(total.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " VND");
                            },
                            error: function (xhr, ajaxOptions, thrownError) {
                                alert("Error updating total amount.");
                            }
                        });
                    }

                    //Load lại tổng tiền thanh toán
                    $.ajax({
                        url: '@Url.Action("GetTotalAmount", "Cart")',
                        success: function (total) {
                            console.log("Tổng tiền: ");
                            $("#totalCheckout").text(total.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " VND");
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            alert("Error updating total amount.");
                        }
                    });

                    //Load lại Cart ViewComponent
                    $.ajax({
                        url: '@Url.Action("RefreshCartViewComponent", "Cart")',
                        success: function (data) {
                            $("#cart_view_component").html(data);
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            console.log(thrownError)
                            alert("Error updating Cart ViewComponent.");
                        }
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    //some errror, some show err msg to user and log the error
                    alert(xhr.responseText);
                }
            });
        }// --------------- Change Quantity With Two Buttons End ---------------
    </script>
</div>
<!-- Cart Page End -->